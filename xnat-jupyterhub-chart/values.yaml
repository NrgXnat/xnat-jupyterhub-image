global:
  postgresql:
    postgresqlDatabase: "jupyterhub"
    postgresqlPassword: "jupyterhub"
    postgresqlUsername: "jupyterhub"

postgresql:
  enabled: true
  persistence:
    size: 1Gi

jupyterhub:
  enabled: true
  hub:
    baseUrl: /jupyterhub
    config:
      JupyterHub:
        admin_access: true
        authenticator_class: xnat_authenticator.XnatAuthenticator
#      Authenticator:
#        admin_users:
#          - admin
    image:
      name: "jupyterhub/k8s-hub"
      tag: "3.0.0"
      pullPolicy: Never
    extraEnv:
      # Some of these values are dependent on your XNAT deployment and may need to be changed
      # Some of these values should use secrets instead of being stored in plaintext
      JH_XNAT_URL:
        name: JH_XNAT_URL
        value: "http://xnat-xnat-web" # This is dependent on your XNAT deployment
      JH_XNAT_USERNAME:
        name: JH_XNAT_USERNAME
        value: "jupyterhub"
      JH_XNAT_PASSWORD:
        name: JH_XNAT_PASSWORD
        value: "jupyterhub"
      JH_XNAT_UID:
        name: JH_XNAT_UID
        value: "0"
      JH_XNAT_GID:
        name: JH_XNAT_GID
        value: "0"
      JH_SPAWNER:
        name: JH_SPAWNER
        value: "kubespawner"
      JH_START_TIMEOUT:
        name: JH_START_TIMEOUT
        value: "180"
      JH_HTTP_TIMEOUT:
        name: JH_HTTP_TIMEOUT
        value: "75"
      JH_XNAT_ARCHIVE_PVC:
        name: JH_XNAT_ARCHIVE_PVC
        value: "archive"
      JH_XNAT_ARCHIVE_PATH_TRANSLATION:
        name: JH_XNAT_ARCHIVE_PATH_TRANSLATION
        value: "/data/xnat/archive"  # This is what archive path as seen by XNAT
      POSTGRES_DB:
        name: POSTGRES_DB
        value: "jupyterhub"
      POSTGRES_USER:
        name: POSTGRES_USER
        value: "jupyterhub"
      POSTGRES_PASSWORD:
        name: POSTGRES_PASSWORD
        value: "jupyterhub"
      POSTGRES_HOST:
        name: POSTGRES_HOST
        value: "jupyterhub-postgresql" # This is dependent on the release name
      POSTGRES_PORT:
        name: POSTGRES_PORT
        value: "5432"
    extraVolumes:
      - name: xnat-logger
        configMap:
          name: xnat-logger
      - name: xnat-authenticator
        configMap:
          name: xnat-authenticator
      - name: postgres
        configMap:
          name: jupyterhub-config
      - name: pre-spawn-hook
        configMap:
          name: jupyterhub-config
    extraVolumeMounts:
      - name: xnat-logger
        mountPath: /usr/local/etc/jupyterhub/xnat_logger.py
        subPath: xnat_logger.py
      - name: xnat-authenticator
        mountPath: /usr/local/etc/jupyterhub/xnat_authenticator.py
        subPath: xnat_authenticator.py
      - name: postgres
        mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/postgres.py
        subPath: postgres.py
      - name: pre-spawn-hook
        mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/pre_spawn_hook.py
        subPath: pre_spawn_hook.py
    extraConfig:
      shutdownOnLogout: |
        c.JupyterHub.shutdown_on_logout = True
      timeouts: |
        import os

        c.Spawner.start_timeout = int(os.environ['JH_START_TIMEOUT'])
        c.Spawner.http_timeout = int(os.environ['JH_HTTP_TIMEOUT'])
    networkPolicy:
      enabled: false
    concurrentSpawnLimit: 64
    consecutiveFailureLimit: 5
    allowNamedServers: true
    deploymentStrategy:
      type: Recreate
    db:
      type: postgres
    services:
      xnat:
        admin: true
        api_token: SECRET_TOKEN
    loadRoles:
      xnat-role:
        description: XNAT service role
        scopes: [ admin:servers,admin:users,admin:groups,tokens,list:services,read:hub,access:servers,access:services,proxy ]
        services: [ xnat ]

  singleuser:
    storage:
      capacity: 10Gi
      type: static
      static:
        pvcName: "workspaces"
        subPath: "users/{username}"
      homeMountPath: /workspace/{username}
    networkPolicy:
      enabled: false
    uid: 0
    fsGid: 0
    cmd:
      - jupyterhub-singleuser
      - --allow-root

  proxy:
    secretToken: "SECRET_TOKEN"
    service:
      type: ClusterIP
    chp:
      networkPolicy:
        enabled: false

  debug:
    enabled: false